import pandas

import matplotlib.pyplot as plt
import pandas as pd

from keras.constraints import maxnorm
from keras.optimizers import SGD
from keras.layers import Dropout
from keras.metrics import Precision
from keras.models import Sequential
from keras.layers import Dense
from keras.wrappers.scikit_learn import KerasClassifier
from sklearn.model_selection import cross_val_score
from sklearn.preprocessing import LabelEncoder
from sklearn.model_selection import StratifiedKFold
from sklearn.preprocessing import StandardScaler
from sklearn.pipeline import Pipeline

dataset = pandas.read_csv('/content/sample_data/traindata.csv')

dataset = dataset.fillna(0)

dataset = dataset.values
# split into input (X) and output (Y) variables
X = dataset[:,0:5].astype(float)
Y = dataset[:,5]

scalar = StandardScaler()
scalar.fit(X)
Xstand = scalar.transform(X)

model = Sequential()
model.add(Dense(60, input_dim=5, activation='relu', kernel_constraint=maxnorm(3)))
model.add(Dropout(0.2))
model.add(Dense(30, activation='relu', kernel_constraint=maxnorm(3)))
model.add(Dropout(0.2))
model.add(Dense(1, activation='sigmoid'))
sgd = SGD(lr=0.1, momentum=0.9)
model.compile(loss='binary_crossentropy', optimizer=sgd, metrics=['accuracy'])

model.fit(Xstand, Y, epochs=150, batch_size=10, verbose=1)

dataset1 = pandas.read_csv('/content/sample_data/testdata.csv')

dataset1 = dataset1.fillna(0)

dataset1 = dataset1.values
# split into input (X) and output (Y) variables
Xnew = dataset1[:,0:5].astype(float)

Xnewstand = scalar.transform(Xnew)

ynew = model.predict_classes(Xnewstand)

file1 = open("myfile.txt","w")

for i in range(len(ynew)):
	file1.write(str(ynew[i]))
	file1.write("\n")
 
file1.close() 